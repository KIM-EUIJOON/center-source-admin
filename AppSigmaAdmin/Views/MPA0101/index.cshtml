@model AppSigmaAdmin.ResponseData.NishitetsuPaymentInfoListEntity
@using AppSigmaAdmin.Utility
@using System.Data

@{
    ViewBag.Title = "Index";
}

@section style{
    <style>

        .GridTable {
            display: table;
            text-align: center;
            margin-left: auto;
            margin-right: auto;
            margin-top: 5px;
            border-collapse: separate;
            border-spacing: 20px 5px;
        }

        .GridTableRow {
            display: table-row;
        }

        .GridTableCell {
            display: table-cell;
            text-align: left;
        }

        .GridTableCol {
            display: table;
            border-collapse: separate;
            margin-top: -5px;
            margin-left: -25px;
        }
    </style>
}
@section funcTitle {
    <div class="funcTitleBer">
        決済データ検索及びダウンロード（西鉄バスチケット）
    </div>}
<form action="@Common.CreateUrl("/MPA0101/Index", false)" method="post">
    <div class="ContentsBase">
        <div class="userInfoBox">
            <div class="GridTable">
                <div class="GridTableRow">
                    <div class="GridTableCell">
                        期間:
                        @Html.TextBoxFor(m => m.TargetDateBegin, new { Class = "std-textbox", placeholder = "開始日時", required = "required", onclick = " SetcalenderFrom();", id = "datetimepickerFrom", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.TargetDateBegin)
                        から
                        @Html.TextBoxFor(m => m.TargetDateEnd, new { Class = "std-textbox", placeholder = "終了日時", required = "required", onclick = " SetcalenderTo();", id = "datetimepickerTo", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.TargetDateEnd)
                        まで
                    </div>
                    <div class="GridTableCell">
                    </div>
                    <div class="GridTableCell">
                        <input type="submit" formaction="Index" formmethod="post" value="検索" class="accent-color-button" style="margin-bottom:10px" />
                    </div>
                </div>
                <div class="GridTableRow">
                    <div class="GridTableCell">
                        myroute会員ID：
                        @Html.TextBoxFor(m => m.UserId, new { Class = "std-textbox", placeholder = "myroute会員ID" })
                        @Html.ValidationMessageFor(m => m.UserId)
                    </div>
                    <div class="GridTableCell">
                    </div>
                    <div class="GridTableCell">
                        <input type="submit" formaction="NishitetsuOutPutDate" formmethod="post" id="NishitetsuOutPutDate" value="CSVダウンロード" class="accent-color-button" style="margin-bottom:10px" />
                    </div>
                </div>
                <div class="GridTableRow">
                    <div class="GridTableCell">
                        <div class="GridTableCol">
                            <div class="GridTableCell">
                                @{
                                    List<SelectListItem> TicketTypeList = new List<SelectListItem>();
                                    TicketTypeList.Add(new SelectListItem
                                    {
                                        Text = "種別未選択",
                                        Value = "-",
                                        Selected = true
                                    });
                                    TicketTypeList.Add(new SelectListItem
                                    {
                                        Text = "1日フリー乗車券",
                                        Value = "0"
                                    });
                                    TicketTypeList.Add(new SelectListItem
                                    {
                                        Text = "6時間フリー乗車券",
                                        Value = "1"
                                    });
                                }
                                券種：
                                @Html.DropDownListFor(m => m.TicketType, TicketTypeList, new { Class = "DropList" })
                            </div>
                            <div class="GridTableCell">
                                @{
                                    List<SelectListItem> PaymentTypeList = new List<SelectListItem>();
                                    PaymentTypeList.Add(new SelectListItem
                                    {
                                        Text = "種別未選択",
                                        Value = "-",
                                        Selected = true
                                    });
                                    PaymentTypeList.Add(new SelectListItem
                                    {
                                        Text = "即時決済",
                                        Value = "3"
                                    });
                                    PaymentTypeList.Add(new SelectListItem
                                    {
                                        Text = "払戻し",
                                        Value = "4"
                                    });
                                    PaymentTypeList.Add(new SelectListItem
                                    {
                                        Text = "取消",
                                        Value = "5"
                                    });
                                    PaymentTypeList.Add(new SelectListItem
                                    {
                                        Text = "決済種別不明",
                                        Value = "決済種別不明"
                                    });
                                }
                                決済種別：
                                @Html.DropDownListFor(m => m.PaymentType, PaymentTypeList, new { Class = "DropList" })
                            </div>
                            <div class="GridTableCell">
                                @{
                                    List<SelectListItem> TicketNumTypeList = new List<SelectListItem>();
                                    TicketNumTypeList.Add(new SelectListItem
                                    {
                                        Text = "種別未選択",
                                        Value = "-",
                                        Selected = true
                                    });
                                    TicketNumTypeList.Add(new SelectListItem
                                    {
                                        Text = "大人",
                                        Value = "大人"
                                    });
                                    TicketNumTypeList.Add(new SelectListItem
                                    {
                                        Text = "子供",
                                        Value = "子供"
                                    });
                                }
                                大人/子供：
                                @Html.DropDownListFor(m => m.TicketNumType, TicketNumTypeList, new { Class = "DropList" })
                            </div>
                        </div>
                    </div>
                    <div class="GridTableCell">
                    </div>
                    <div class="GridTableCell">
                        <input type="submit" formaction="Index" formmethod="get" value="条件クリア" class="action-enter" style="margin-bottom:10px" />
                    </div>
                </div>
            </div>
            <div class="errorMessage">
                @Html.ValidationSummary(false, "")
            </div>
            <div>
            </div>
            <div>
                @using (Html.BeginForm())
                {
                    if (Model != null)
                    {
                        if (Model.NishitetsuPaymentInfoList != null)
                        {
                            @*表示件数：10件*@
                            var grid = new WebGrid(null, rowsPerPage: 10);
                            grid.Bind(source: Model.NishitetsuPaymentInfoList, autoSortAndPage: false, rowCount: Model.ListMaxCount);

                            <div class="grid-table">
                                @grid.GetHtml(tableStyle: "gridTable", headerStyle: "gridhead",
                                    columns:grid.Columns(grid.Column("UserId",header:"myroute会員ID",style: "gridbody12"),grid.Column("TranDatetime", header:"決済日時", style: "gridbody18"),
                                    grid.Column("PaymentId", header: "決済ID", style: "gridbody6"), grid.Column("TicketType", header: "券種", style: "gridbody6"),
                                    grid.Column("AdultNum", header: "大人枚数", style: "gridbody9"), grid.Column("ChildNum", header: "子供枚数", style: "gridbody9"),
                                    grid.Column("PaymentType", header: "決済種別", style: "gridbody8"), grid.Column("Amount", header: "金額", style: "gridbody9"), grid.Column("ReceiptNo", header: "領収書番号", style: "gridbody14")
                                    ))
                            </div>

                        }
                    }
                }
            </div>
            <div>
            </div>
        </div>
    </div>
</form>

