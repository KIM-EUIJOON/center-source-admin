@model AppSigmaAdmin.ResponseData.NassePaymentInfoListEntity
@using AppSigmaAdmin.Utility
@using System.Data
@using AppSigmaAdmin.Library

@section style{
    <style>

        .GridTable {
            border-spacing: 50px 5px !important;
        }

        .GridTableCol {
            margin-left: -50px;
        }
    </style>
}
@section scripts{
    <script>
        $(document).ready(function () {
            if ($('#DebugFlag').val() != '@ApplicationConfig.ENV_DEBUG') {
                $('table tr a, tfoot a, td a').on('click', function() {
                    //sigma付与
                    location.href = "/sigma" + $(this).attr('href');

                    return false;
                });
            }
            $('#AllClear').on('click', function () {
                window.location.href = '@Common.CreateUrl("/MPA0301", false)';
            });
        });
    </script>
}

@{
    ViewBag.Title = "決済データ検索及びダウンロード（ナッセグルメパスポート）";
}
@section funcTitle {
    <div class="funcTitleBer">
        決済データ検索及びダウンロード（ナッセグルメパスポート）
    </div>
}

<input type="hidden" id="DebugFlag" value="@ApplicationConfig.DeployEnv" />

<form action="@Common.CreateUrl("/MPA0301", false)" method="post">
    <div class="ContentsBase">
        <div class="userInfoBox">
            <div class="GridTable">
                <div class="GridTableRow">
                    <div class="GridTableCell">
                        期間:
                        @Html.TextBoxFor(m => m.TargetDateBegin, new { Class = "std-textbox", placeholder = "開始日時", onclick = " SetcalenderFrom();", id = "datetimepickerFrom", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.TargetDateBegin)
                        から
                        @Html.TextBoxFor(m => m.TargetDateEnd, new { Class = "std-textbox", placeholder = "終了日時", onclick = " SetcalenderTo();", id = "datetimepickerTo", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.TargetDateEnd)
                        まで
                    </div>
                    <div class="GridTableCell">
                        <input type="submit" formaction="@Common.CreateUrl("/MPA0301/Index", false)" formmethod="post" value="検索" class="accent-color-button" style="margin-bottom:8px" />
                    </div>
                </div>
                <div class="GridTableRow">
                    <div class="GridTableCell">
                        @{
                            // イベント種別プルダウンリスト
                            List<SelectListItem> PassPortID = new List<SelectListItem>();
                            List<string> SelectCheck = new List<string>();
                            PassPortID.Add(new SelectListItem                               //プルダウンリストの初期値
                            {
                                Text = "イベント名未選択",
                                Value = "-",
                                Selected = true
                            });
                            //初期値以外はDBから取得する
                            if (Model != null)
                            {
                                if (Model.NassePulldownList != null)
                                {
                                    foreach (var PassportList in Model.NassePulldownList)
                                    {
                                        string PassPortName = PassportList.PassportName.ToString(); //イベント名称
                                        string PassPortIdnum = PassportList.PassportID.ToString();  //パスポートID

                                        if (SelectCheck.Contains(PassPortIdnum) == false)            //同じ選択肢を表示させないためパスポートIDの重複チェック
                                        {
                                            SelectCheck.Add(PassPortIdnum);                         //重複チェック用リストに追加した選択肢を入力
                                            PassPortID.Add(new SelectListItem                       //選択肢追加
                                            {
                                                Text = PassPortName,
                                                Value = PassPortIdnum,
                                            });
                                        }
                                    }
                                }
                            }
                        }
                        イベント名：
                        @Html.DropDownListFor(m => m.PassportID, PassPortID, new { Class = "DropList" })
                    </div>
                    <div class="GridTableCol">
                        <div class="GridTableRow">
                            <div class="GridTableCell">
                                <input type="submit" formaction="@Common.CreateUrl("/MPA0301/NasseOutPutDate", false)" formmethod="post" id="NasseOutPutDate" value="CSVダウンロード" class="accent-color-button" style="margin-bottom:10px" />
                            </div>
                        </div>
                        <div class="GridTableRow">
                            <div class="GridTableCell">
                                <input type="button" value="条件クリア" class="action-enter" style="margin-bottom:10px" id="AllClear" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="errorMessage">
                @Html.ValidationSummary(false, "")
            </div>
            <div>
                @{
                    if (Model != null)
                    {
                        if (Model.NassePaymentInfoList != null)
                        {
                            @*表示件数：10件*@
                            var grid = new WebGrid(null, rowsPerPage: Model.ListNum, canSort: false);
                            grid.Bind(source: Model.NassePaymentInfoList, autoSortAndPage: false, rowCount: Model.ListMaxCount);


                            <div class="grid-table">
                                @grid.GetHtml(tableStyle: "gridTable", headerStyle: "gridhead",
                                    columns:grid.Columns(grid.Column("UserId",header:"myroute会員ID",style: "gridbody12"),grid.Column("TranDatetime", header:"決済日", style: "gridbody18"),
                                    grid.Column("PaymentId", header: "決済ID", style: "gridbody6"), grid.Column("PassportId", header: "パスポートID", style: "gridbody12"),
                                    grid.Column("PassportName", header: "イベント名", style: "gridbody18"), grid.Column("PaymentType", header: "決済種別", style: "gridbody8"),
                                      grid.Column("Amount", header: "金額", style: "gridbody9")
                                    ))
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
</form>