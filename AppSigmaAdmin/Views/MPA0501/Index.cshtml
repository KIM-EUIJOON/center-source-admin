@model AppSigmaAdmin.ResponseData.YokohamaPaymentInfo
@using AppSigmaAdmin.ResponseData
@using AppSigmaAdmin.Utility
@using System.Data
@using AppSigmaAdmin.Library

@{
    ViewBag.Title = "横浜チケット決済情報（横浜フリー乗車券）";
}

@Scripts.RenderFormat(BundleHtmlTag.ScriptTag, "~/bundles/jquery/MPA0501")

@section style{
    <style>
        .GridTableCol {
            margin-left: -25px;
        }
    </style>
}

@section funcTitle {
    <div class="funcTitleBer">
        決済データ検索及びダウンロード(横浜チケット)
    </div>
}

<input type="hidden" id="DebugFlag" value="@ApplicationConfig.DeployEnv" />
<input type="hidden" id="Debug" value="@ApplicationConfig.ENV_DEBUG" />
<input type="hidden" id="CreateUrl" value="@Common.CreateUrl("/MPA0501", false)" />
<input type="hidden" id="SelectShopList" value="@Common.CreateUrl("/MPA0501/SelectTicketTypeList", false)" />
<input type="hidden" id="language" value="@Model.Language" />

<form action="@Common.CreateUrl("/MPA0501", false)" method="post">
    <div class="ContentsBase">
        <div class="userInfoBox">
            <div class="GridTable">
                <div class="GridTableRow">
                    <div class="GridTableCell">
                        期間:
                        @Html.TextBoxFor(Model => Model.TargetDateBegin, new { Class = "std-textbox", placeholder = "開始日時", onclick = " SetcalenderFrom();", id = "datetimepickerFrom", autocomplete = "off" })
                        @Html.ValidationMessageFor(Model => Model.TargetDateBegin)
                        から
                        @Html.TextBoxFor(Model => Model.TargetDateEnd, new { Class = "std-textbox", placeholder = "終了日時", onclick = " SetcalenderTo();", id = "datetimepickerTo", autocomplete = "off" })
                        @Html.ValidationMessageFor(Model => Model.TargetDateEnd)
                        まで
                    </div>
                    <div class="GridTableCell">
                    </div>
                    <div class="GridTableCell">
                        <input type="submit" formaction="@Common.CreateUrl("/MPA0501/Index", false)" formmethod="post" value="検索" class="accent-color-button" style="margin-bottom:10px" />
                    </div>
                </div>
                <div class="GridTableRow">
                    <div class="GridTableCol">
                        <div class="GridTableCell">
                            myroute会員ID：
                            @Html.TextBoxFor(Model => Model.UserId, new { Class = "std-textbox", placeholder = "myroute会員ID" })
                            @Html.ValidationMessageFor(Model => Model.UserId)
                        </div>
                        <div class="GridTableCell">
                            @{
                                // アプリ種別ドロップリスト項目作成
                                List<SelectListItem> AplList = new List<SelectListItem>();
                                AplList = @ViewBag.AplList;
                            }
                            アプリ種別：
                            @Html.DropDownListFor(Model => Model.Apltype, AplList, new { Class = "DropList" })
                        </div>
                    </div>
                    <div class="GridTableCell">
                    </div>
                    <div class="GridTableCell">
                        <input type="submit" formaction="@Common.CreateUrl("/MPA0501/YokohamaOutPutDate", false)" formmethod="post" id="YokohamaOutPutDate" value="CSVダウンロード" class="accent-color-button" style="margin-bottom:10px" />
                    </div>
                </div>
                <div class="GridTableRow">
                    <div class="GridTableCell">
                        <div class="GridTableCol">
                            <div class="GridTableCell">
                                @{
                                    // 商品種別ドロップリスト項目作成
                                    List<SelectListItem> TicketList = new List<SelectListItem>();
                                    TicketList = @ViewBag.TicketList;
                                }
                                商品種別：
                                @Html.DropDownListFor(Model => Model.TicketId, TicketList, new { Class = "DropList", id = "ticketlist" })

                            </div>
                            <div class="GridTableCell">
                                @{
                                    // 決済種別ドロップリスト項目作成
                                    List<SelectListItem> PaymentList = new List<SelectListItem>();
                                    PaymentList = @ViewBag.PaymentList;
                                }
                                決済種別：
                                @{
                                        @Html.DropDownListFor(Model => Model.PaymentType, PaymentList, new { Class = "DropList", id = "paymentlist" })
                                }
                            </div>
                            <div class="GridTableCell">
                                @{
                                    // 大人/子供ドロップリスト項目作成
                                    List<SelectListItem> TicketUserList = new List<SelectListItem>();
                                    TicketUserList = @ViewBag.TicketUserList;
                                }
                                大人/子供：
                                @Html.DropDownListFor(Model => Model.TicketNumType, TicketUserList, new { Class = "DropList", id = "Ticetuserlist" })
                            </div>
                        </div>
                    </div>
                    <div class="GridTableCell">
                    </div>
                    <div class="GridTableCell">
                        <input type="button" value="条件クリア" class="action-enter" style="margin-bottom:10px" id="AllClear" />
                    </div>
                </div>
            </div>
            <div class="errorMessage">
                @Html.ValidationSummary(false, "")
            </div>
            <div>
            </div>
            <div>
                @{
                    if (Model.YokohamaPaymentInfoList != null )
                    {
                        if (Model.YokohamaPaymentInfoList.Count != 0)
                        {
                            // 表示件数：10件
                            var grid = new WebGrid(null, rowsPerPage: Model.rowsPerPage, canSort: false);
                            grid.Bind(source: Model.YokohamaPaymentInfoList, autoSortAndPage: false, rowCount: Model.ListMaxCount);
                            <div class="grid-table">
                                @(new HtmlString(grid.GetHtml(tableStyle: "gridTable", headerStyle: "gridhead", columns: grid.Columns(
                                                                                                                                                grid.Column("UserId", header: "myroute会員ID", style: "gridbody6"),
                                                                                                                                                grid.Column("TranDatetime", header: "決済日時", style: "gridbody18"),
                                                                                                                                                grid.Column("PaymentId", header: "決済ID", style: "gridbody6"),
                                                                                                                                                grid.Column("TicketName", header: "商品", style: "gridbody18"),
                                                                                                                                                grid.Column("AdultNum", header: "大人枚数", style: "gridbody8"),
                                                                                                                                                grid.Column("ChildNum", header: "子供枚数", style: "gridbody8"),
                                                                                                                                                grid.Column("PaymentType", header: "決済種別", style: "gridbody8"),
                                                                                                                                                grid.Column("Amount", header: "金額", style: "gridbody6"),
                                                                                                                                                grid.Column("ReceiptNo", header: "領収書番号", style: "gridbody12")
                                                                                                                                                , grid.Column("Apltype", header: "アプリ種別", style: "gridbody8")
                                                                                                                                                )).ToHtmlString().Replace("{0}", "<br/>")))
                            </div>
                        }
                    }
                }
            </div>
            <div>
            </div>
        </div>
    </div>
</form>

}
